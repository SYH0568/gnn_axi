-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_mult_3lyr_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of dense_mult_3lyr_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal data0_logits_0_V_reg_290 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data0_logits_1_V_reg_295 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_logits_2_V_reg_300 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_logits_3_V_reg_305 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_logits_4_V_reg_310 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_logits_5_V_reg_315 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_logits_6_V_reg_320 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_logits_7_V_reg_325 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_0_V_reg_330 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_1_V_reg_335 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_2_V_reg_340 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_3_V_reg_345 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_4_V_reg_350 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_5_V_reg_355 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_6_V_reg_360 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_7_V_reg_365 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_0_V_reg_370 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_1_V_reg_375 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_2_V_reg_380 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_3_V_reg_385 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_4_V_reg_390 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_5_V_reg_395 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_6_V_reg_400 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_7_V_reg_405 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_0_V_reg_410 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_1_V_reg_415 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_2_V_reg_420 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_3_V_reg_425 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_4_V_reg_430 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_5_V_reg_435 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_6_V_reg_440 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_7_V_reg_445 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_1_fu_90_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_1_fu_90_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_1_fu_90_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_1_fu_90_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_1_fu_90_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_1_fu_90_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_1_fu_90_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_1_fu_90_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_1_fu_90_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call10 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call10 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call10 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call10 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call10 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call10 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call10 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp19 : BOOLEAN;
    signal grp_dense_resource_2_0_fu_114_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_2_0_fu_114_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_2_0_fu_114_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_2_0_fu_114_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_2_0_fu_114_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_2_0_fu_114_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_2_0_fu_114_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_2_0_fu_114_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_2_0_fu_114_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call28 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call28 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call28 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call28 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call28 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call28 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call28 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call28 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp38 : BOOLEAN;
    signal grp_dense_resource_0_0_1_fu_126_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_1_fu_126_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_1_fu_126_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_1_fu_126_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_1_fu_126_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call46 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call46 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call46 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call46 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call46 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call46 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call46 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call46 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp57 : BOOLEAN;
    signal call_ret6_relu_fu_138_ap_ready : STD_LOGIC;
    signal call_ret6_relu_fu_138_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret6_relu_fu_138_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret6_relu_fu_138_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret6_relu_fu_138_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret6_relu_fu_138_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret6_relu_fu_138_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret6_relu_fu_138_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret6_relu_fu_138_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_150_ap_ready : STD_LOGIC;
    signal call_ret_relu_fu_150_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_150_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_150_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_150_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_150_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_150_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_150_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_150_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_6_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_7_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_8_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_9_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);

    component dense_resource_1_0_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component dense_resource_2_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component dense_resource_0_0_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component relu IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    grp_dense_resource_1_0_1_fu_90 : component dense_resource_1_0_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => data_0_V_read_int_reg,
        data_1_V_read => data_1_V_read_int_reg,
        data_2_V_read => data_2_V_read_int_reg,
        data_3_V_read => data_3_V_read_int_reg,
        data_4_V_read => data_4_V_read_int_reg,
        data_5_V_read => data_5_V_read_int_reg,
        data_6_V_read => data_6_V_read_int_reg,
        data_7_V_read => data_7_V_read_int_reg,
        data_8_V_read => data_8_V_read_int_reg,
        data_9_V_read => data_9_V_read_int_reg,
        ap_return_0 => grp_dense_resource_1_0_1_fu_90_ap_return_0,
        ap_return_1 => grp_dense_resource_1_0_1_fu_90_ap_return_1,
        ap_return_2 => grp_dense_resource_1_0_1_fu_90_ap_return_2,
        ap_return_3 => grp_dense_resource_1_0_1_fu_90_ap_return_3,
        ap_return_4 => grp_dense_resource_1_0_1_fu_90_ap_return_4,
        ap_return_5 => grp_dense_resource_1_0_1_fu_90_ap_return_5,
        ap_return_6 => grp_dense_resource_1_0_1_fu_90_ap_return_6,
        ap_return_7 => grp_dense_resource_1_0_1_fu_90_ap_return_7,
        ap_ce => grp_dense_resource_1_0_1_fu_90_ap_ce);

    grp_dense_resource_2_0_fu_114 : component dense_resource_2_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => data0_0_V_reg_330,
        data_1_V_read => data0_1_V_reg_335,
        data_2_V_read => data0_2_V_reg_340,
        data_3_V_read => data0_3_V_reg_345,
        data_4_V_read => data0_4_V_reg_350,
        data_5_V_read => data0_5_V_reg_355,
        data_6_V_read => data0_6_V_reg_360,
        data_7_V_read => data0_7_V_reg_365,
        ap_return_0 => grp_dense_resource_2_0_fu_114_ap_return_0,
        ap_return_1 => grp_dense_resource_2_0_fu_114_ap_return_1,
        ap_return_2 => grp_dense_resource_2_0_fu_114_ap_return_2,
        ap_return_3 => grp_dense_resource_2_0_fu_114_ap_return_3,
        ap_return_4 => grp_dense_resource_2_0_fu_114_ap_return_4,
        ap_return_5 => grp_dense_resource_2_0_fu_114_ap_return_5,
        ap_return_6 => grp_dense_resource_2_0_fu_114_ap_return_6,
        ap_return_7 => grp_dense_resource_2_0_fu_114_ap_return_7,
        ap_ce => grp_dense_resource_2_0_fu_114_ap_ce);

    grp_dense_resource_0_0_1_fu_126 : component dense_resource_0_0_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => data1_0_V_reg_410,
        data_1_V_read => data1_1_V_reg_415,
        data_2_V_read => data1_2_V_reg_420,
        data_3_V_read => data1_3_V_reg_425,
        data_4_V_read => data1_4_V_reg_430,
        data_5_V_read => data1_5_V_reg_435,
        data_6_V_read => data1_6_V_reg_440,
        data_7_V_read => data1_7_V_reg_445,
        ap_return_0 => grp_dense_resource_0_0_1_fu_126_ap_return_0,
        ap_return_1 => grp_dense_resource_0_0_1_fu_126_ap_return_1,
        ap_return_2 => grp_dense_resource_0_0_1_fu_126_ap_return_2,
        ap_return_3 => grp_dense_resource_0_0_1_fu_126_ap_return_3,
        ap_ce => grp_dense_resource_0_0_1_fu_126_ap_ce);

    call_ret6_relu_fu_138 : component relu
    port map (
        ap_ready => call_ret6_relu_fu_138_ap_ready,
        data_0_V_read => data0_logits_0_V_reg_290,
        data_1_V_read => data0_logits_1_V_reg_295,
        data_2_V_read => data0_logits_2_V_reg_300,
        data_3_V_read => data0_logits_3_V_reg_305,
        data_4_V_read => data0_logits_4_V_reg_310,
        data_5_V_read => data0_logits_5_V_reg_315,
        data_6_V_read => data0_logits_6_V_reg_320,
        data_7_V_read => data0_logits_7_V_reg_325,
        ap_return_0 => call_ret6_relu_fu_138_ap_return_0,
        ap_return_1 => call_ret6_relu_fu_138_ap_return_1,
        ap_return_2 => call_ret6_relu_fu_138_ap_return_2,
        ap_return_3 => call_ret6_relu_fu_138_ap_return_3,
        ap_return_4 => call_ret6_relu_fu_138_ap_return_4,
        ap_return_5 => call_ret6_relu_fu_138_ap_return_5,
        ap_return_6 => call_ret6_relu_fu_138_ap_return_6,
        ap_return_7 => call_ret6_relu_fu_138_ap_return_7);

    call_ret_relu_fu_150 : component relu
    port map (
        ap_ready => call_ret_relu_fu_150_ap_ready,
        data_0_V_read => data1_logits_0_V_reg_370,
        data_1_V_read => data1_logits_1_V_reg_375,
        data_2_V_read => data1_logits_2_V_reg_380,
        data_3_V_read => data1_logits_3_V_reg_385,
        data_4_V_read => data1_logits_4_V_reg_390,
        data_5_V_read => data1_logits_5_V_reg_395,
        data_6_V_read => data1_logits_6_V_reg_400,
        data_7_V_read => data1_logits_7_V_reg_405,
        ap_return_0 => call_ret_relu_fu_150_ap_return_0,
        ap_return_1 => call_ret_relu_fu_150_ap_return_1,
        ap_return_2 => call_ret_relu_fu_150_ap_return_2,
        ap_return_3 => call_ret_relu_fu_150_ap_return_3,
        ap_return_4 => call_ret_relu_fu_150_ap_return_4,
        ap_return_5 => call_ret_relu_fu_150_ap_return_5,
        ap_return_6 => call_ret_relu_fu_150_ap_return_6,
        ap_return_7 => call_ret_relu_fu_150_ap_return_7);





    data_0_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_0_V_read_int_reg <= data_0_V_read;
        end if;
    end process;

    data_1_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_1_V_read_int_reg <= data_1_V_read;
        end if;
    end process;

    data_2_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_2_V_read_int_reg <= data_2_V_read;
        end if;
    end process;

    data_3_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_3_V_read_int_reg <= data_3_V_read;
        end if;
    end process;

    data_4_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_4_V_read_int_reg <= data_4_V_read;
        end if;
    end process;

    data_5_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_5_V_read_int_reg <= data_5_V_read;
        end if;
    end process;

    data_6_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_6_V_read_int_reg <= data_6_V_read;
        end if;
    end process;

    data_7_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_7_V_read_int_reg <= data_7_V_read;
        end if;
    end process;

    data_8_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_8_V_read_int_reg <= data_8_V_read;
        end if;
    end process;

    data_9_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_9_V_read_int_reg <= data_9_V_read;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                data0_0_V_reg_330 <= call_ret6_relu_fu_138_ap_return_0;
                data0_1_V_reg_335 <= call_ret6_relu_fu_138_ap_return_1;
                data0_2_V_reg_340 <= call_ret6_relu_fu_138_ap_return_2;
                data0_3_V_reg_345 <= call_ret6_relu_fu_138_ap_return_3;
                data0_4_V_reg_350 <= call_ret6_relu_fu_138_ap_return_4;
                data0_5_V_reg_355 <= call_ret6_relu_fu_138_ap_return_5;
                data0_6_V_reg_360 <= call_ret6_relu_fu_138_ap_return_6;
                data0_7_V_reg_365 <= call_ret6_relu_fu_138_ap_return_7;
                data0_logits_0_V_reg_290 <= grp_dense_resource_1_0_1_fu_90_ap_return_0;
                data0_logits_1_V_reg_295 <= grp_dense_resource_1_0_1_fu_90_ap_return_1;
                data0_logits_2_V_reg_300 <= grp_dense_resource_1_0_1_fu_90_ap_return_2;
                data0_logits_3_V_reg_305 <= grp_dense_resource_1_0_1_fu_90_ap_return_3;
                data0_logits_4_V_reg_310 <= grp_dense_resource_1_0_1_fu_90_ap_return_4;
                data0_logits_5_V_reg_315 <= grp_dense_resource_1_0_1_fu_90_ap_return_5;
                data0_logits_6_V_reg_320 <= grp_dense_resource_1_0_1_fu_90_ap_return_6;
                data0_logits_7_V_reg_325 <= grp_dense_resource_1_0_1_fu_90_ap_return_7;
                data1_0_V_reg_410 <= call_ret_relu_fu_150_ap_return_0;
                data1_1_V_reg_415 <= call_ret_relu_fu_150_ap_return_1;
                data1_2_V_reg_420 <= call_ret_relu_fu_150_ap_return_2;
                data1_3_V_reg_425 <= call_ret_relu_fu_150_ap_return_3;
                data1_4_V_reg_430 <= call_ret_relu_fu_150_ap_return_4;
                data1_5_V_reg_435 <= call_ret_relu_fu_150_ap_return_5;
                data1_6_V_reg_440 <= call_ret_relu_fu_150_ap_return_6;
                data1_7_V_reg_445 <= call_ret_relu_fu_150_ap_return_7;
                data1_logits_0_V_reg_370 <= grp_dense_resource_2_0_fu_114_ap_return_0;
                data1_logits_1_V_reg_375 <= grp_dense_resource_2_0_fu_114_ap_return_1;
                data1_logits_2_V_reg_380 <= grp_dense_resource_2_0_fu_114_ap_return_2;
                data1_logits_3_V_reg_385 <= grp_dense_resource_2_0_fu_114_ap_return_3;
                data1_logits_4_V_reg_390 <= grp_dense_resource_2_0_fu_114_ap_return_4;
                data1_logits_5_V_reg_395 <= grp_dense_resource_2_0_fu_114_ap_return_5;
                data1_logits_6_V_reg_400 <= grp_dense_resource_2_0_fu_114_ap_return_6;
                data1_logits_7_V_reg_405 <= grp_dense_resource_2_0_fu_114_ap_return_7;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return_0 <= grp_dense_resource_0_0_1_fu_126_ap_return_0;
    ap_return_1 <= grp_dense_resource_0_0_1_fu_126_ap_return_1;
    ap_return_2 <= grp_dense_resource_0_0_1_fu_126_ap_return_2;
    ap_return_3 <= grp_dense_resource_0_0_1_fu_126_ap_return_3;

    grp_dense_resource_0_0_1_fu_126_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp57)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp57)) then 
            grp_dense_resource_0_0_1_fu_126_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_resource_0_0_1_fu_126_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_resource_1_0_1_fu_90_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp19)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp19)) then 
            grp_dense_resource_1_0_1_fu_90_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_resource_1_0_1_fu_90_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_resource_2_0_fu_114_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp38)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp38)) then 
            grp_dense_resource_2_0_fu_114_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_resource_2_0_fu_114_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

end behav;
