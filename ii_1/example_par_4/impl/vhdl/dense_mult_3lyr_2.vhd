-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_mult_3lyr_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of dense_mult_3lyr_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv19_7FFF3 : STD_LOGIC_VECTOR (18 downto 0) := "1111111111111110011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv12_FE1 : STD_LOGIC_VECTOR (11 downto 0) := "111111100001";
    constant ap_const_lv20_1A : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000011010";
    constant ap_const_lv21_1FFFCA : STD_LOGIC_VECTOR (20 downto 0) := "111111111111111001010";
    constant ap_const_lv21_1FFF9D : STD_LOGIC_VECTOR (20 downto 0) := "111111111111110011101";
    constant ap_const_lv21_39 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000111001";
    constant ap_const_lv21_1FFFCB : STD_LOGIC_VECTOR (20 downto 0) := "111111111111111001011";

    signal data0_0_V_reg_577 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data0_1_V_reg_582 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_2_V_reg_587 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_3_V_reg_592 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_4_V_reg_597 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_5_V_reg_602 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_6_V_reg_607 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_7_V_reg_612 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_0_V_reg_617 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_1_V_reg_622 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_2_V_reg_627 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_3_V_reg_632 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_4_V_reg_637 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_5_V_reg_642 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_6_V_reg_647 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_7_V_reg_652 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_fu_489_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_reg_657 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_285_fu_495_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_285_reg_662 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_290_fu_527_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_290_reg_667 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_3_fu_130_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_3_fu_130_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_3_fu_130_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_3_fu_130_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_3_fu_130_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_3_fu_130_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_3_fu_130_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_3_fu_130_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_3_fu_130_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call10 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call10 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call10 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call10 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call10 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp17 : BOOLEAN;
    signal grp_dense_resource_0_0_fu_154_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_fu_154_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_fu_154_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_fu_154_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_fu_154_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_fu_154_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_fu_154_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_fu_154_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_fu_154_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call28 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call28 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call28 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call28 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call28 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call28 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp36 : BOOLEAN;
    signal call_ret1_relu_fu_166_ap_ready : STD_LOGIC;
    signal call_ret1_relu_fu_166_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret1_relu_fu_166_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret1_relu_fu_166_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret1_relu_fu_166_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret1_relu_fu_166_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret1_relu_fu_166_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret1_relu_fu_166_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret1_relu_fu_166_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_178_ap_ready : STD_LOGIC;
    signal call_ret_relu_fu_178_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_178_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_178_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_178_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_178_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_178_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_178_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_178_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mul_ln1118_fu_542_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln_fu_330_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1118_122_fu_549_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_123_fu_556_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_124_fu_563_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_222_fu_382_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln_fu_386_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln_fu_386_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1118_fu_394_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_222_fu_382_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1118_102_fu_400_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_125_fu_570_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_126_fu_433_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_126_fu_433_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_fu_439_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_225_fu_453_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_s_fu_457_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_s_fu_457_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_226_fu_465_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_225_fu_453_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1118_fu_469_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_46_fu_475_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln708_fu_339_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_s_fu_347_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_193_fu_360_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_194_fu_373_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_195_fu_406_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_196_fu_420_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_fu_485_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_288_fu_507_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_38_fu_513_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_227_fu_449_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_289_fu_517_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_39_fu_523_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_287_fu_501_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_286_fu_533_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_fu_542_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_122_fu_549_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_123_fu_556_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_124_fu_563_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_125_fu_570_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_6_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_7_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_8_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_9_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);

    component dense_resource_0_0_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component dense_resource_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component relu IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component example_mul_mul_1tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component example_mul_mul_1ocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component example_mul_mul_1sc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component example_mul_mul_1ncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;



begin
    grp_dense_resource_0_0_3_fu_130 : component dense_resource_0_0_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => data_0_V_read_int_reg,
        data_1_V_read => data_1_V_read_int_reg,
        data_2_V_read => data_2_V_read_int_reg,
        data_3_V_read => data_3_V_read_int_reg,
        data_4_V_read => data_4_V_read_int_reg,
        data_5_V_read => data_5_V_read_int_reg,
        data_6_V_read => data_6_V_read_int_reg,
        data_7_V_read => data_7_V_read_int_reg,
        data_8_V_read => data_8_V_read_int_reg,
        data_9_V_read => data_9_V_read_int_reg,
        ap_return_0 => grp_dense_resource_0_0_3_fu_130_ap_return_0,
        ap_return_1 => grp_dense_resource_0_0_3_fu_130_ap_return_1,
        ap_return_2 => grp_dense_resource_0_0_3_fu_130_ap_return_2,
        ap_return_3 => grp_dense_resource_0_0_3_fu_130_ap_return_3,
        ap_return_4 => grp_dense_resource_0_0_3_fu_130_ap_return_4,
        ap_return_5 => grp_dense_resource_0_0_3_fu_130_ap_return_5,
        ap_return_6 => grp_dense_resource_0_0_3_fu_130_ap_return_6,
        ap_return_7 => grp_dense_resource_0_0_3_fu_130_ap_return_7,
        ap_ce => grp_dense_resource_0_0_3_fu_130_ap_ce);

    grp_dense_resource_0_0_fu_154 : component dense_resource_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => data0_0_V_reg_577,
        data_1_V_read => data0_1_V_reg_582,
        data_2_V_read => data0_2_V_reg_587,
        data_3_V_read => data0_3_V_reg_592,
        data_4_V_read => data0_4_V_reg_597,
        data_5_V_read => data0_5_V_reg_602,
        data_6_V_read => data0_6_V_reg_607,
        data_7_V_read => data0_7_V_reg_612,
        ap_return_0 => grp_dense_resource_0_0_fu_154_ap_return_0,
        ap_return_1 => grp_dense_resource_0_0_fu_154_ap_return_1,
        ap_return_2 => grp_dense_resource_0_0_fu_154_ap_return_2,
        ap_return_3 => grp_dense_resource_0_0_fu_154_ap_return_3,
        ap_return_4 => grp_dense_resource_0_0_fu_154_ap_return_4,
        ap_return_5 => grp_dense_resource_0_0_fu_154_ap_return_5,
        ap_return_6 => grp_dense_resource_0_0_fu_154_ap_return_6,
        ap_return_7 => grp_dense_resource_0_0_fu_154_ap_return_7,
        ap_ce => grp_dense_resource_0_0_fu_154_ap_ce);

    call_ret1_relu_fu_166 : component relu
    port map (
        ap_ready => call_ret1_relu_fu_166_ap_ready,
        data_0_V_read => grp_dense_resource_0_0_3_fu_130_ap_return_0,
        data_1_V_read => grp_dense_resource_0_0_3_fu_130_ap_return_1,
        data_2_V_read => grp_dense_resource_0_0_3_fu_130_ap_return_2,
        data_3_V_read => grp_dense_resource_0_0_3_fu_130_ap_return_3,
        data_4_V_read => grp_dense_resource_0_0_3_fu_130_ap_return_4,
        data_5_V_read => grp_dense_resource_0_0_3_fu_130_ap_return_5,
        data_6_V_read => grp_dense_resource_0_0_3_fu_130_ap_return_6,
        data_7_V_read => grp_dense_resource_0_0_3_fu_130_ap_return_7,
        ap_return_0 => call_ret1_relu_fu_166_ap_return_0,
        ap_return_1 => call_ret1_relu_fu_166_ap_return_1,
        ap_return_2 => call_ret1_relu_fu_166_ap_return_2,
        ap_return_3 => call_ret1_relu_fu_166_ap_return_3,
        ap_return_4 => call_ret1_relu_fu_166_ap_return_4,
        ap_return_5 => call_ret1_relu_fu_166_ap_return_5,
        ap_return_6 => call_ret1_relu_fu_166_ap_return_6,
        ap_return_7 => call_ret1_relu_fu_166_ap_return_7);

    call_ret_relu_fu_178 : component relu
    port map (
        ap_ready => call_ret_relu_fu_178_ap_ready,
        data_0_V_read => data1_logits_0_V_reg_617,
        data_1_V_read => data1_logits_1_V_reg_622,
        data_2_V_read => data1_logits_2_V_reg_627,
        data_3_V_read => data1_logits_3_V_reg_632,
        data_4_V_read => data1_logits_4_V_reg_637,
        data_5_V_read => data1_logits_5_V_reg_642,
        data_6_V_read => data1_logits_6_V_reg_647,
        data_7_V_read => data1_logits_7_V_reg_652,
        ap_return_0 => call_ret_relu_fu_178_ap_return_0,
        ap_return_1 => call_ret_relu_fu_178_ap_return_1,
        ap_return_2 => call_ret_relu_fu_178_ap_return_2,
        ap_return_3 => call_ret_relu_fu_178_ap_return_3,
        ap_return_4 => call_ret_relu_fu_178_ap_return_4,
        ap_return_5 => call_ret_relu_fu_178_ap_return_5,
        ap_return_6 => call_ret_relu_fu_178_ap_return_6,
        ap_return_7 => call_ret_relu_fu_178_ap_return_7);

    example_mul_mul_1tde_U1933 : component example_mul_mul_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 6,
        dout_WIDTH => 20)
    port map (
        din0 => call_ret_relu_fu_178_ap_return_0,
        din1 => mul_ln1118_fu_542_p1,
        dout => mul_ln1118_fu_542_p2);

    example_mul_mul_1ocq_U1934 : component example_mul_mul_1ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 7,
        dout_WIDTH => 21)
    port map (
        din0 => call_ret_relu_fu_178_ap_return_1,
        din1 => mul_ln1118_122_fu_549_p1,
        dout => mul_ln1118_122_fu_549_p2);

    example_mul_mul_1sc4_U1935 : component example_mul_mul_1sc4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 8,
        dout_WIDTH => 21)
    port map (
        din0 => call_ret_relu_fu_178_ap_return_2,
        din1 => mul_ln1118_123_fu_556_p1,
        dout => mul_ln1118_123_fu_556_p2);

    example_mul_mul_1ncg_U1936 : component example_mul_mul_1ncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 7,
        dout_WIDTH => 21)
    port map (
        din0 => call_ret_relu_fu_178_ap_return_3,
        din1 => mul_ln1118_124_fu_563_p1,
        dout => mul_ln1118_124_fu_563_p2);

    example_mul_mul_1ocq_U1937 : component example_mul_mul_1ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 7,
        dout_WIDTH => 21)
    port map (
        din0 => call_ret_relu_fu_178_ap_return_5,
        din1 => mul_ln1118_125_fu_570_p1,
        dout => mul_ln1118_125_fu_570_p2);





    data_0_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_0_V_read_int_reg <= data_0_V_read;
        end if;
    end process;

    data_1_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_1_V_read_int_reg <= data_1_V_read;
        end if;
    end process;

    data_2_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_2_V_read_int_reg <= data_2_V_read;
        end if;
    end process;

    data_3_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_3_V_read_int_reg <= data_3_V_read;
        end if;
    end process;

    data_4_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_4_V_read_int_reg <= data_4_V_read;
        end if;
    end process;

    data_5_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_5_V_read_int_reg <= data_5_V_read;
        end if;
    end process;

    data_6_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_6_V_read_int_reg <= data_6_V_read;
        end if;
    end process;

    data_7_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_7_V_read_int_reg <= data_7_V_read;
        end if;
    end process;

    data_8_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_8_V_read_int_reg <= data_8_V_read;
        end if;
    end process;

    data_9_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_9_V_read_int_reg <= data_9_V_read;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln703_285_reg_662 <= add_ln703_285_fu_495_p2;
                add_ln703_290_reg_667 <= add_ln703_290_fu_527_p2;
                add_ln703_reg_657 <= add_ln703_fu_489_p2;
                data0_0_V_reg_577 <= call_ret1_relu_fu_166_ap_return_0;
                data0_1_V_reg_582 <= call_ret1_relu_fu_166_ap_return_1;
                data0_2_V_reg_587 <= call_ret1_relu_fu_166_ap_return_2;
                data0_3_V_reg_592 <= call_ret1_relu_fu_166_ap_return_3;
                data0_4_V_reg_597 <= call_ret1_relu_fu_166_ap_return_4;
                data0_5_V_reg_602 <= call_ret1_relu_fu_166_ap_return_5;
                data0_6_V_reg_607 <= call_ret1_relu_fu_166_ap_return_6;
                data0_7_V_reg_612 <= call_ret1_relu_fu_166_ap_return_7;
                data1_logits_0_V_reg_617 <= grp_dense_resource_0_0_fu_154_ap_return_0;
                data1_logits_1_V_reg_622 <= grp_dense_resource_0_0_fu_154_ap_return_1;
                data1_logits_2_V_reg_627 <= grp_dense_resource_0_0_fu_154_ap_return_2;
                data1_logits_3_V_reg_632 <= grp_dense_resource_0_0_fu_154_ap_return_3;
                data1_logits_4_V_reg_637 <= grp_dense_resource_0_0_fu_154_ap_return_4;
                data1_logits_5_V_reg_642 <= grp_dense_resource_0_0_fu_154_ap_return_5;
                data1_logits_6_V_reg_647 <= grp_dense_resource_0_0_fu_154_ap_return_6;
                data1_logits_7_V_reg_652 <= grp_dense_resource_0_0_fu_154_ap_return_7;
            end if;
        end if;
    end process;
    add_ln1118_fu_469_p2 <= std_logic_vector(signed(sext_ln1118_226_fu_465_p1) + signed(sext_ln1118_225_fu_453_p1));
    add_ln703_285_fu_495_p2 <= std_logic_vector(unsigned(trunc_ln708_193_fu_360_p4) + unsigned(trunc_ln708_194_fu_373_p4));
    add_ln703_286_fu_533_p2 <= std_logic_vector(unsigned(add_ln703_285_reg_662) + unsigned(add_ln703_reg_657));
    add_ln703_287_fu_501_p2 <= std_logic_vector(unsigned(trunc_ln708_195_fu_406_p4) + unsigned(trunc_ln708_196_fu_420_p4));
    add_ln703_288_fu_507_p2 <= std_logic_vector(signed(sext_ln703_fu_485_p1) + signed(ap_const_lv12_FE1));
    add_ln703_289_fu_517_p2 <= std_logic_vector(signed(sext_ln703_38_fu_513_p1) + signed(sext_ln1118_227_fu_449_p1));
    add_ln703_290_fu_527_p2 <= std_logic_vector(signed(sext_ln703_39_fu_523_p1) + signed(add_ln703_287_fu_501_p2));
    add_ln703_fu_489_p2 <= std_logic_vector(signed(sext_ln708_fu_339_p1) + signed(trunc_ln708_s_fu_347_p4));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= std_logic_vector(unsigned(add_ln703_290_reg_667) + unsigned(add_ln703_286_fu_533_p2));

    grp_dense_resource_0_0_3_fu_130_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp17)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp17)) then 
            grp_dense_resource_0_0_3_fu_130_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_resource_0_0_3_fu_130_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_resource_0_0_fu_154_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp36)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp36)) then 
            grp_dense_resource_0_0_fu_154_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_resource_0_0_fu_154_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1118_122_fu_549_p1 <= ap_const_lv21_1FFFCA(7 - 1 downto 0);
    mul_ln1118_123_fu_556_p1 <= ap_const_lv21_1FFF9D(8 - 1 downto 0);
    mul_ln1118_124_fu_563_p1 <= ap_const_lv21_39(7 - 1 downto 0);
    mul_ln1118_125_fu_570_p1 <= ap_const_lv21_1FFFCB(7 - 1 downto 0);
    mul_ln1118_126_fu_433_p0 <= call_ret_relu_fu_178_ap_return_6;
    mul_ln1118_126_fu_433_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_126_fu_433_p0) * signed(ap_const_lv19_7FFF3))), 19));
    mul_ln1118_fu_542_p1 <= ap_const_lv20_1A(6 - 1 downto 0);
    sext_ln1118_222_fu_382_p0 <= call_ret_relu_fu_178_ap_return_4;
        sext_ln1118_222_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_222_fu_382_p0),21));

    sext_ln1118_225_fu_453_p0 <= call_ret_relu_fu_178_ap_return_7;
        sext_ln1118_225_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_225_fu_453_p0),18));

        sext_ln1118_226_fu_465_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_457_p3),18));

        sext_ln1118_227_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_439_p4),13));

        sext_ln703_38_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_288_fu_507_p2),13));

        sext_ln703_39_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_289_fu_517_p2),14));

        sext_ln703_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_46_fu_475_p4),12));

        sext_ln708_fu_339_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_330_p4),14));

    shl_ln1118_s_fu_457_p1 <= call_ret_relu_fu_178_ap_return_7;
    shl_ln1118_s_fu_457_p3 <= (shl_ln1118_s_fu_457_p1 & ap_const_lv3_0);
    shl_ln_fu_386_p1 <= call_ret_relu_fu_178_ap_return_4;
    shl_ln_fu_386_p3 <= (shl_ln_fu_386_p1 & ap_const_lv7_0);
    sub_ln1118_102_fu_400_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_394_p2) - unsigned(sext_ln1118_222_fu_382_p1));
    sub_ln1118_fu_394_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(shl_ln_fu_386_p3));
    tmp_46_fu_475_p4 <= add_ln1118_fu_469_p2(17 downto 7);
    tmp_fu_439_p4 <= mul_ln1118_126_fu_433_p2(18 downto 7);
    trunc_ln708_193_fu_360_p4 <= mul_ln1118_123_fu_556_p2(20 downto 7);
    trunc_ln708_194_fu_373_p4 <= mul_ln1118_124_fu_563_p2(20 downto 7);
    trunc_ln708_195_fu_406_p4 <= sub_ln1118_102_fu_400_p2(20 downto 7);
    trunc_ln708_196_fu_420_p4 <= mul_ln1118_125_fu_570_p2(20 downto 7);
    trunc_ln708_s_fu_347_p4 <= mul_ln1118_122_fu_549_p2(20 downto 7);
    trunc_ln_fu_330_p4 <= mul_ln1118_fu_542_p2(19 downto 7);
end behav;
