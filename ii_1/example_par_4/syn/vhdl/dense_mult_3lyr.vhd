-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_mult_3lyr is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of dense_mult_3lyr is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv19_7FFF3 : STD_LOGIC_VECTOR (18 downto 0) := "1111111111111110011";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv14_58 : STD_LOGIC_VECTOR (13 downto 0) := "00000001011000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv14_70 : STD_LOGIC_VECTOR (13 downto 0) := "00000001110000";
    constant ap_const_lv8_D5 : STD_LOGIC_VECTOR (7 downto 0) := "11010101";
    constant ap_const_lv21_2E : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000101110";
    constant ap_const_lv21_1FFFCD : STD_LOGIC_VECTOR (20 downto 0) := "111111111111111001101";
    constant ap_const_lv21_1FFFDD : STD_LOGIC_VECTOR (20 downto 0) := "111111111111111011101";
    constant ap_const_lv21_1FFFDA : STD_LOGIC_VECTOR (20 downto 0) := "111111111111111011010";
    constant ap_const_lv21_23 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100011";
    constant ap_const_lv20_FFFED : STD_LOGIC_VECTOR (19 downto 0) := "11111111111111101101";
    constant ap_const_lv21_1FFFD2 : STD_LOGIC_VECTOR (20 downto 0) := "111111111111111010010";
    constant ap_const_lv20_16 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010110";
    constant ap_const_lv21_1FFFA7 : STD_LOGIC_VECTOR (20 downto 0) := "111111111111110100111";
    constant ap_const_lv21_5D : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001011101";
    constant ap_const_lv21_27 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100111";

    signal data0_logits_0_V_reg_1123 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data0_logits_1_V_reg_1128 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_logits_2_V_reg_1133 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_logits_3_V_reg_1138 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_logits_4_V_reg_1143 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_logits_5_V_reg_1148 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_logits_6_V_reg_1153 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_logits_7_V_reg_1158 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_0_V_reg_1163 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_1_V_reg_1168 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_2_V_reg_1173 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_3_V_reg_1178 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_4_V_reg_1183 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_5_V_reg_1188 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_6_V_reg_1193 : STD_LOGIC_VECTOR (13 downto 0);
    signal data0_7_V_reg_1198 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_0_V_reg_1203 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_1_V_reg_1208 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_2_V_reg_1213 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_3_V_reg_1218 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_4_V_reg_1223 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_5_V_reg_1228 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_6_V_reg_1233 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_logits_7_V_reg_1238 : STD_LOGIC_VECTOR (13 downto 0);
    signal data1_7_V_reg_1243 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_293_fu_555_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_293_reg_1250 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_294_fu_561_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_294_reg_1255 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_204_reg_1260 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln703_300_fu_723_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_300_reg_1265 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_301_fu_729_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_301_reg_1270 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_208_reg_1275 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_209_reg_1280 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_306_fu_876_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_306_reg_1285 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_309_fu_882_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_309_reg_1290 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_311_fu_894_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_311_reg_1295 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_fu_158_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_fu_158_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_fu_158_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_fu_158_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_fu_158_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_fu_158_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_fu_158_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_fu_158_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_1_0_fu_158_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call25 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call25 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call25 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call25 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call25 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call25 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call25 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp34 : BOOLEAN;
    signal grp_dense_resource_0_0_2_fu_170_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_2_fu_170_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_2_fu_170_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_2_fu_170_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_2_fu_170_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_2_fu_170_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_2_fu_170_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_2_fu_170_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_resource_0_0_2_fu_170_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call7 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call7 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call7 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call7 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call7 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call7 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp15 : BOOLEAN;
    signal call_ret2_relu_fu_188_ap_ready : STD_LOGIC;
    signal call_ret2_relu_fu_188_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret2_relu_fu_188_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret2_relu_fu_188_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret2_relu_fu_188_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret2_relu_fu_188_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret2_relu_fu_188_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret2_relu_fu_188_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret2_relu_fu_188_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_200_ap_ready : STD_LOGIC;
    signal call_ret_relu_fu_200_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_200_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_200_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_200_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_200_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_200_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_200_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal call_ret_relu_fu_200_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mul_ln1118_fu_1046_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_228_fu_357_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_127_fu_1053_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_230_fu_374_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_231_fu_378_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_fu_382_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_fu_382_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_231_fu_378_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_232_fu_390_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_103_fu_394_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_47_fu_400_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_235_fu_422_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln_fu_426_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln_fu_426_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_236_fu_434_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1118_s_fu_444_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_s_fu_444_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1118_fu_438_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_237_fu_452_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_104_fu_456_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_48_fu_462_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_238_fu_476_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_128_fu_1060_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_240_fu_493_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_241_fu_497_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_107_fu_501_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_107_fu_501_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_242_fu_509_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_105_fu_513_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_241_fu_497_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_106_fu_519_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln708_198_fu_525_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_s_fu_361_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln_fu_348_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_254_fu_472_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_253_fu_410_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_292_fu_545_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_fu_539_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_40_fu_551_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_fu_535_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_197_fu_480_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_109_fu_567_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_109_fu_567_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1118_110_fu_579_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_110_fu_579_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_247_fu_587_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_246_fu_575_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1118_109_fu_591_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln708_200_fu_597_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_201_fu_611_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_201_fu_611_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_129_fu_1067_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_130_fu_1074_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_131_fu_643_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_131_fu_643_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_49_fu_649_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_204_fu_663_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_111_fu_673_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_111_fu_673_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_249_fu_681_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1118_110_fu_685_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_240_fu_493_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1118_111_fu_691_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_50_fu_697_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln708_125_fu_621_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_124_fu_607_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_203_fu_634_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_202_fu_625_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_298_fu_711_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_299_fu_717_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_255_fu_707_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln708_126_fu_659_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1118_133_fu_1081_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln708_206_fu_735_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1118_134_fu_1088_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_s_fu_757_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_757_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_230_fu_374_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_250_fu_765_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln1118_112_fu_769_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_135_fu_1095_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln1118_112_fu_794_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_112_fu_794_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_251_fu_802_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln1118_113_fu_812_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_113_fu_812_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln1118_113_fu_806_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_252_fu_820_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln1118_114_fu_824_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln708_210_fu_830_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_136_fu_1102_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_137_fu_1109_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln708_213_fu_862_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_213_fu_862_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_207_fu_748_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_127_fu_744_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_211_fu_844_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_130_fu_840_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_131_fu_872_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_212_fu_853_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_310_fu_888_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_108_fu_906_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_245_fu_913_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1118_107_fu_917_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_244_fu_903_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1118_108_fu_923_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln708_199_fu_929_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln708_123_fu_939_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_295_fu_943_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_296_fu_949_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_132_fu_1116_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_248_fu_959_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_302_fu_974_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_205_fu_962_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_fu_980_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_41_fu_971_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_303_fu_984_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_304_fu_990_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_129_fu_1004_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_128_fu_1001_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_307_fu_1007_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_308_fu_1013_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_312_fu_1018_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_297_fu_954_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_305_fu_996_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_313_fu_1022_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_fu_1046_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_127_fu_1053_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_228_fu_357_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_127_fu_1053_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_128_fu_1060_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_238_fu_476_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_128_fu_1060_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_129_fu_1067_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_130_fu_1074_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_133_fu_1081_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_134_fu_1088_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_134_fu_1088_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_135_fu_1095_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_136_fu_1102_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_136_fu_1102_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_137_fu_1109_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_132_fu_1116_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_6_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);

    component dense_resource_1_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component dense_resource_0_0_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component relu IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component example_mul_mul_1ncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component example_mul_mul_1ocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component example_mul_mul_1rcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component example_mul_mul_1tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component example_mul_mul_1sc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component example_mul_mul_1wdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;



begin
    grp_dense_resource_1_0_fu_158 : component dense_resource_1_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => data0_0_V_reg_1163,
        data_1_V_read => data0_1_V_reg_1168,
        data_2_V_read => data0_2_V_reg_1173,
        data_3_V_read => data0_3_V_reg_1178,
        data_4_V_read => data0_4_V_reg_1183,
        data_5_V_read => data0_5_V_reg_1188,
        data_6_V_read => data0_6_V_reg_1193,
        data_7_V_read => data0_7_V_reg_1198,
        ap_return_0 => grp_dense_resource_1_0_fu_158_ap_return_0,
        ap_return_1 => grp_dense_resource_1_0_fu_158_ap_return_1,
        ap_return_2 => grp_dense_resource_1_0_fu_158_ap_return_2,
        ap_return_3 => grp_dense_resource_1_0_fu_158_ap_return_3,
        ap_return_4 => grp_dense_resource_1_0_fu_158_ap_return_4,
        ap_return_5 => grp_dense_resource_1_0_fu_158_ap_return_5,
        ap_return_6 => grp_dense_resource_1_0_fu_158_ap_return_6,
        ap_return_7 => grp_dense_resource_1_0_fu_158_ap_return_7,
        ap_ce => grp_dense_resource_1_0_fu_158_ap_ce);

    grp_dense_resource_0_0_2_fu_170 : component dense_resource_0_0_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => data_0_V_read_int_reg,
        data_1_V_read => data_1_V_read_int_reg,
        data_2_V_read => data_2_V_read_int_reg,
        data_3_V_read => data_3_V_read_int_reg,
        data_4_V_read => data_4_V_read_int_reg,
        data_5_V_read => data_5_V_read_int_reg,
        data_6_V_read => data_6_V_read_int_reg,
        ap_return_0 => grp_dense_resource_0_0_2_fu_170_ap_return_0,
        ap_return_1 => grp_dense_resource_0_0_2_fu_170_ap_return_1,
        ap_return_2 => grp_dense_resource_0_0_2_fu_170_ap_return_2,
        ap_return_3 => grp_dense_resource_0_0_2_fu_170_ap_return_3,
        ap_return_4 => grp_dense_resource_0_0_2_fu_170_ap_return_4,
        ap_return_5 => grp_dense_resource_0_0_2_fu_170_ap_return_5,
        ap_return_6 => grp_dense_resource_0_0_2_fu_170_ap_return_6,
        ap_return_7 => grp_dense_resource_0_0_2_fu_170_ap_return_7,
        ap_ce => grp_dense_resource_0_0_2_fu_170_ap_ce);

    call_ret2_relu_fu_188 : component relu
    port map (
        ap_ready => call_ret2_relu_fu_188_ap_ready,
        data_0_V_read => data0_logits_0_V_reg_1123,
        data_1_V_read => data0_logits_1_V_reg_1128,
        data_2_V_read => data0_logits_2_V_reg_1133,
        data_3_V_read => data0_logits_3_V_reg_1138,
        data_4_V_read => data0_logits_4_V_reg_1143,
        data_5_V_read => data0_logits_5_V_reg_1148,
        data_6_V_read => data0_logits_6_V_reg_1153,
        data_7_V_read => data0_logits_7_V_reg_1158,
        ap_return_0 => call_ret2_relu_fu_188_ap_return_0,
        ap_return_1 => call_ret2_relu_fu_188_ap_return_1,
        ap_return_2 => call_ret2_relu_fu_188_ap_return_2,
        ap_return_3 => call_ret2_relu_fu_188_ap_return_3,
        ap_return_4 => call_ret2_relu_fu_188_ap_return_4,
        ap_return_5 => call_ret2_relu_fu_188_ap_return_5,
        ap_return_6 => call_ret2_relu_fu_188_ap_return_6,
        ap_return_7 => call_ret2_relu_fu_188_ap_return_7);

    call_ret_relu_fu_200 : component relu
    port map (
        ap_ready => call_ret_relu_fu_200_ap_ready,
        data_0_V_read => data1_logits_0_V_reg_1203,
        data_1_V_read => data1_logits_1_V_reg_1208,
        data_2_V_read => data1_logits_2_V_reg_1213,
        data_3_V_read => data1_logits_3_V_reg_1218,
        data_4_V_read => data1_logits_4_V_reg_1223,
        data_5_V_read => data1_logits_5_V_reg_1228,
        data_6_V_read => data1_logits_6_V_reg_1233,
        data_7_V_read => data1_logits_7_V_reg_1238,
        ap_return_0 => call_ret_relu_fu_200_ap_return_0,
        ap_return_1 => call_ret_relu_fu_200_ap_return_1,
        ap_return_2 => call_ret_relu_fu_200_ap_return_2,
        ap_return_3 => call_ret_relu_fu_200_ap_return_3,
        ap_return_4 => call_ret_relu_fu_200_ap_return_4,
        ap_return_5 => call_ret_relu_fu_200_ap_return_5,
        ap_return_6 => call_ret_relu_fu_200_ap_return_6,
        ap_return_7 => call_ret_relu_fu_200_ap_return_7);

    example_mul_mul_1ncg_U1591 : component example_mul_mul_1ncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 7,
        dout_WIDTH => 21)
    port map (
        din0 => call_ret_relu_fu_200_ap_return_0,
        din1 => mul_ln1118_fu_1046_p1,
        dout => mul_ln1118_fu_1046_p2);

    example_mul_mul_1ocq_U1592 : component example_mul_mul_1ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 7,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln1118_127_fu_1053_p0,
        din1 => mul_ln1118_127_fu_1053_p1,
        dout => mul_ln1118_127_fu_1053_p2);

    example_mul_mul_1ocq_U1593 : component example_mul_mul_1ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 7,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln1118_128_fu_1060_p0,
        din1 => mul_ln1118_128_fu_1060_p1,
        dout => mul_ln1118_128_fu_1060_p2);

    example_mul_mul_1ocq_U1594 : component example_mul_mul_1ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 7,
        dout_WIDTH => 21)
    port map (
        din0 => call_ret_relu_fu_200_ap_return_2,
        din1 => mul_ln1118_129_fu_1067_p1,
        dout => mul_ln1118_129_fu_1067_p2);

    example_mul_mul_1ncg_U1595 : component example_mul_mul_1ncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 7,
        dout_WIDTH => 21)
    port map (
        din0 => call_ret_relu_fu_200_ap_return_3,
        din1 => mul_ln1118_130_fu_1074_p1,
        dout => mul_ln1118_130_fu_1074_p2);

    example_mul_mul_1rcU_U1596 : component example_mul_mul_1rcU
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 6,
        dout_WIDTH => 20)
    port map (
        din0 => call_ret_relu_fu_200_ap_return_0,
        din1 => mul_ln1118_133_fu_1081_p1,
        dout => mul_ln1118_133_fu_1081_p2);

    example_mul_mul_1ocq_U1597 : component example_mul_mul_1ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 7,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln1118_134_fu_1088_p0,
        din1 => mul_ln1118_134_fu_1088_p1,
        dout => mul_ln1118_134_fu_1088_p2);

    example_mul_mul_1tde_U1598 : component example_mul_mul_1tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 6,
        dout_WIDTH => 20)
    port map (
        din0 => call_ret_relu_fu_200_ap_return_3,
        din1 => mul_ln1118_135_fu_1095_p1,
        dout => mul_ln1118_135_fu_1095_p2);

    example_mul_mul_1sc4_U1599 : component example_mul_mul_1sc4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 8,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln1118_136_fu_1102_p0,
        din1 => mul_ln1118_136_fu_1102_p1,
        dout => mul_ln1118_136_fu_1102_p2);

    example_mul_mul_1wdI_U1600 : component example_mul_mul_1wdI
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 8,
        dout_WIDTH => 21)
    port map (
        din0 => call_ret_relu_fu_200_ap_return_6,
        din1 => mul_ln1118_137_fu_1109_p1,
        dout => mul_ln1118_137_fu_1109_p2);

    example_mul_mul_1ncg_U1601 : component example_mul_mul_1ncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 7,
        dout_WIDTH => 21)
    port map (
        din0 => data1_7_V_reg_1243,
        din1 => mul_ln1118_132_fu_1116_p1,
        dout => mul_ln1118_132_fu_1116_p2);





    data_0_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_0_V_read_int_reg <= data_0_V_read;
        end if;
    end process;

    data_1_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_1_V_read_int_reg <= data_1_V_read;
        end if;
    end process;

    data_2_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_2_V_read_int_reg <= data_2_V_read;
        end if;
    end process;

    data_3_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_3_V_read_int_reg <= data_3_V_read;
        end if;
    end process;

    data_4_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_4_V_read_int_reg <= data_4_V_read;
        end if;
    end process;

    data_5_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_5_V_read_int_reg <= data_5_V_read;
        end if;
    end process;

    data_6_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_6_V_read_int_reg <= data_6_V_read;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln703_293_reg_1250 <= add_ln703_293_fu_555_p2;
                add_ln703_294_reg_1255 <= add_ln703_294_fu_561_p2;
                add_ln703_300_reg_1265 <= add_ln703_300_fu_723_p2;
                add_ln703_301_reg_1270 <= add_ln703_301_fu_729_p2;
                add_ln703_306_reg_1285 <= add_ln703_306_fu_876_p2;
                add_ln703_309_reg_1290 <= add_ln703_309_fu_882_p2;
                add_ln703_311_reg_1295 <= add_ln703_311_fu_894_p2;
                data0_0_V_reg_1163 <= call_ret2_relu_fu_188_ap_return_0;
                data0_1_V_reg_1168 <= call_ret2_relu_fu_188_ap_return_1;
                data0_2_V_reg_1173 <= call_ret2_relu_fu_188_ap_return_2;
                data0_3_V_reg_1178 <= call_ret2_relu_fu_188_ap_return_3;
                data0_4_V_reg_1183 <= call_ret2_relu_fu_188_ap_return_4;
                data0_5_V_reg_1188 <= call_ret2_relu_fu_188_ap_return_5;
                data0_6_V_reg_1193 <= call_ret2_relu_fu_188_ap_return_6;
                data0_7_V_reg_1198 <= call_ret2_relu_fu_188_ap_return_7;
                data0_logits_0_V_reg_1123 <= grp_dense_resource_0_0_2_fu_170_ap_return_0;
                data0_logits_1_V_reg_1128 <= grp_dense_resource_0_0_2_fu_170_ap_return_1;
                data0_logits_2_V_reg_1133 <= grp_dense_resource_0_0_2_fu_170_ap_return_2;
                data0_logits_3_V_reg_1138 <= grp_dense_resource_0_0_2_fu_170_ap_return_3;
                data0_logits_4_V_reg_1143 <= grp_dense_resource_0_0_2_fu_170_ap_return_4;
                data0_logits_5_V_reg_1148 <= grp_dense_resource_0_0_2_fu_170_ap_return_5;
                data0_logits_6_V_reg_1153 <= grp_dense_resource_0_0_2_fu_170_ap_return_6;
                data0_logits_7_V_reg_1158 <= grp_dense_resource_0_0_2_fu_170_ap_return_7;
                data1_7_V_reg_1243 <= call_ret_relu_fu_200_ap_return_7;
                data1_logits_0_V_reg_1203 <= grp_dense_resource_1_0_fu_158_ap_return_0;
                data1_logits_1_V_reg_1208 <= grp_dense_resource_1_0_fu_158_ap_return_1;
                data1_logits_2_V_reg_1213 <= grp_dense_resource_1_0_fu_158_ap_return_2;
                data1_logits_3_V_reg_1218 <= grp_dense_resource_1_0_fu_158_ap_return_3;
                data1_logits_4_V_reg_1223 <= grp_dense_resource_1_0_fu_158_ap_return_4;
                data1_logits_5_V_reg_1228 <= grp_dense_resource_1_0_fu_158_ap_return_5;
                data1_logits_6_V_reg_1233 <= grp_dense_resource_1_0_fu_158_ap_return_6;
                data1_logits_7_V_reg_1238 <= grp_dense_resource_1_0_fu_158_ap_return_7;
                trunc_ln708_204_reg_1260 <= trunc_ln708_204_fu_663_p1(13 downto 7);
                trunc_ln708_208_reg_1275 <= sub_ln1118_112_fu_769_p2(17 downto 7);
                trunc_ln708_209_reg_1280 <= mul_ln1118_135_fu_1095_p2(19 downto 7);
            end if;
        end if;
    end process;
    add_ln703_292_fu_545_p2 <= std_logic_vector(signed(sext_ln1118_254_fu_472_p1) + signed(sext_ln1118_253_fu_410_p1));
    add_ln703_293_fu_555_p2 <= std_logic_vector(unsigned(add_ln703_fu_539_p2) + unsigned(sext_ln703_40_fu_551_p1));
    add_ln703_294_fu_561_p2 <= std_logic_vector(signed(sext_ln708_fu_535_p1) + signed(trunc_ln708_197_fu_480_p4));
    add_ln703_295_fu_943_p2 <= std_logic_vector(signed(sext_ln708_123_fu_939_p1) + signed(ap_const_lv14_70));
    add_ln703_296_fu_949_p2 <= std_logic_vector(unsigned(add_ln703_294_reg_1255) + unsigned(add_ln703_295_fu_943_p2));
    add_ln703_297_fu_954_p2 <= std_logic_vector(unsigned(add_ln703_293_reg_1250) + unsigned(add_ln703_296_fu_949_p2));
    add_ln703_298_fu_711_p2 <= std_logic_vector(signed(sext_ln708_125_fu_621_p1) + signed(sext_ln708_124_fu_607_p1));
    add_ln703_299_fu_717_p2 <= std_logic_vector(unsigned(trunc_ln708_203_fu_634_p4) + unsigned(trunc_ln708_202_fu_625_p4));
    add_ln703_300_fu_723_p2 <= std_logic_vector(unsigned(add_ln703_298_fu_711_p2) + unsigned(add_ln703_299_fu_717_p2));
    add_ln703_301_fu_729_p2 <= std_logic_vector(signed(sext_ln1118_255_fu_707_p1) + signed(sext_ln708_126_fu_659_p1));
    add_ln703_302_fu_974_p2 <= std_logic_vector(signed(sext_ln1118_248_fu_959_p1) + signed(ap_const_lv8_D5));
    add_ln703_303_fu_984_p2 <= std_logic_vector(unsigned(trunc_ln708_205_fu_962_p4) + unsigned(sext_ln703_fu_980_p1));
    add_ln703_304_fu_990_p2 <= std_logic_vector(signed(sext_ln703_41_fu_971_p1) + signed(add_ln703_303_fu_984_p2));
    add_ln703_305_fu_996_p2 <= std_logic_vector(unsigned(add_ln703_300_reg_1265) + unsigned(add_ln703_304_fu_990_p2));
    add_ln703_306_fu_876_p2 <= std_logic_vector(unsigned(trunc_ln708_207_fu_748_p4) + unsigned(sext_ln708_127_fu_744_p1));
    add_ln703_307_fu_1007_p2 <= std_logic_vector(signed(sext_ln708_129_fu_1004_p1) + signed(sext_ln708_128_fu_1001_p1));
    add_ln703_308_fu_1013_p2 <= std_logic_vector(unsigned(add_ln703_306_reg_1285) + unsigned(add_ln703_307_fu_1007_p2));
    add_ln703_309_fu_882_p2 <= std_logic_vector(unsigned(trunc_ln708_211_fu_844_p4) + unsigned(sext_ln708_130_fu_840_p1));
    add_ln703_310_fu_888_p2 <= std_logic_vector(signed(sext_ln708_131_fu_872_p1) + signed(ap_const_lv14_58));
    add_ln703_311_fu_894_p2 <= std_logic_vector(unsigned(trunc_ln708_212_fu_853_p4) + unsigned(add_ln703_310_fu_888_p2));
    add_ln703_312_fu_1018_p2 <= std_logic_vector(unsigned(add_ln703_309_reg_1290) + unsigned(add_ln703_311_reg_1295));
    add_ln703_313_fu_1022_p2 <= std_logic_vector(unsigned(add_ln703_308_fu_1013_p2) + unsigned(add_ln703_312_fu_1018_p2));
    add_ln703_fu_539_p2 <= std_logic_vector(unsigned(trunc_ln708_s_fu_361_p4) + unsigned(trunc_ln_fu_348_p4));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return_0 <= add_ln703_297_fu_954_p2;
    ap_return_1 <= add_ln703_305_fu_996_p2;
    ap_return_2 <= add_ln703_313_fu_1022_p2;

    grp_dense_resource_0_0_2_fu_170_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp15)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp15)) then 
            grp_dense_resource_0_0_2_fu_170_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_resource_0_0_2_fu_170_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_resource_1_0_fu_158_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp34)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp34)) then 
            grp_dense_resource_1_0_fu_158_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_resource_1_0_fu_158_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1118_127_fu_1053_p0 <= sext_ln1118_228_fu_357_p1(14 - 1 downto 0);
    mul_ln1118_127_fu_1053_p1 <= ap_const_lv21_1FFFCD(7 - 1 downto 0);
    mul_ln1118_128_fu_1060_p0 <= sext_ln1118_238_fu_476_p1(14 - 1 downto 0);
    mul_ln1118_128_fu_1060_p1 <= ap_const_lv21_1FFFDD(7 - 1 downto 0);
    mul_ln1118_129_fu_1067_p1 <= ap_const_lv21_1FFFDA(7 - 1 downto 0);
    mul_ln1118_130_fu_1074_p1 <= ap_const_lv21_23(7 - 1 downto 0);
    mul_ln1118_131_fu_643_p0 <= sext_ln1118_235_fu_422_p0;
    mul_ln1118_131_fu_643_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_131_fu_643_p0) * signed(ap_const_lv19_7FFF3))), 19));
    mul_ln1118_132_fu_1116_p1 <= ap_const_lv21_27(7 - 1 downto 0);
    mul_ln1118_133_fu_1081_p1 <= ap_const_lv20_FFFED(6 - 1 downto 0);
    mul_ln1118_134_fu_1088_p0 <= sext_ln1118_228_fu_357_p1(14 - 1 downto 0);
    mul_ln1118_134_fu_1088_p1 <= ap_const_lv21_1FFFD2(7 - 1 downto 0);
    mul_ln1118_135_fu_1095_p1 <= ap_const_lv20_16(6 - 1 downto 0);
    mul_ln1118_136_fu_1102_p0 <= sext_ln1118_238_fu_476_p1(14 - 1 downto 0);
    mul_ln1118_136_fu_1102_p1 <= ap_const_lv21_1FFFA7(8 - 1 downto 0);
    mul_ln1118_137_fu_1109_p1 <= ap_const_lv21_5D(8 - 1 downto 0);
    mul_ln1118_fu_1046_p1 <= ap_const_lv21_2E(7 - 1 downto 0);
    sext_ln1118_228_fu_357_p0 <= call_ret_relu_fu_200_ap_return_1;
        sext_ln1118_228_fu_357_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_228_fu_357_p0),21));

    sext_ln1118_230_fu_374_p0 <= call_ret_relu_fu_200_ap_return_2;
        sext_ln1118_230_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_230_fu_374_p0),18));

    sext_ln1118_231_fu_378_p0 <= call_ret_relu_fu_200_ap_return_2;
        sext_ln1118_231_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_231_fu_378_p0),19));

        sext_ln1118_232_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_382_p3),19));

    sext_ln1118_235_fu_422_p0 <= call_ret_relu_fu_200_ap_return_4;
        sext_ln1118_236_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_426_p3),19));

        sext_ln1118_237_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_444_p3),19));

    sext_ln1118_238_fu_476_p0 <= call_ret_relu_fu_200_ap_return_5;
        sext_ln1118_238_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_238_fu_476_p0),21));

    sext_ln1118_240_fu_493_p0 <= call_ret_relu_fu_200_ap_return_6;
        sext_ln1118_240_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_240_fu_493_p0),17));

    sext_ln1118_241_fu_497_p0 <= call_ret_relu_fu_200_ap_return_6;
        sext_ln1118_241_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_241_fu_497_p0),19));

        sext_ln1118_242_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_107_fu_501_p3),19));

        sext_ln1118_244_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data1_7_V_reg_1243),20));

        sext_ln1118_245_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_108_fu_906_p3),20));

        sext_ln1118_246_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_109_fu_567_p3),20));

        sext_ln1118_247_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_110_fu_579_p3),20));

        sext_ln1118_248_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_204_reg_1260),8));

        sext_ln1118_249_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_111_fu_673_p3),17));

        sext_ln1118_250_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_757_p3),18));

        sext_ln1118_251_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_112_fu_794_p3),18));

        sext_ln1118_252_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_113_fu_812_p3),18));

        sext_ln1118_253_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_47_fu_400_p4),13));

        sext_ln1118_254_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_48_fu_462_p4),13));

        sext_ln1118_255_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_50_fu_697_p4),13));

        sext_ln703_40_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_292_fu_545_p2),14));

        sext_ln703_41_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_301_reg_1270),14));

        sext_ln703_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_302_fu_974_p2),14));

        sext_ln708_123_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_199_fu_929_p4),14));

        sext_ln708_124_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_200_fu_597_p4),14));

        sext_ln708_125_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_201_fu_611_p4),14));

        sext_ln708_126_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_49_fu_649_p4),13));

        sext_ln708_127_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_206_fu_735_p4),14));

        sext_ln708_128_fu_1001_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_208_reg_1275),14));

        sext_ln708_129_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_209_reg_1280),14));

        sext_ln708_130_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_210_fu_830_p4),14));

        sext_ln708_131_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_213_fu_862_p4),14));

        sext_ln708_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_198_fu_525_p4),14));

    shl_ln1118_107_fu_501_p1 <= call_ret_relu_fu_200_ap_return_6;
    shl_ln1118_107_fu_501_p3 <= (shl_ln1118_107_fu_501_p1 & ap_const_lv4_0);
    shl_ln1118_108_fu_906_p3 <= (data1_7_V_reg_1243 & ap_const_lv5_0);
    shl_ln1118_109_fu_567_p1 <= call_ret_relu_fu_200_ap_return_0;
    shl_ln1118_109_fu_567_p3 <= (shl_ln1118_109_fu_567_p1 & ap_const_lv5_0);
    shl_ln1118_110_fu_579_p1 <= call_ret_relu_fu_200_ap_return_0;
    shl_ln1118_110_fu_579_p3 <= (shl_ln1118_110_fu_579_p1 & ap_const_lv1_0);
    shl_ln1118_111_fu_673_p1 <= call_ret_relu_fu_200_ap_return_6;
    shl_ln1118_111_fu_673_p3 <= (shl_ln1118_111_fu_673_p1 & ap_const_lv2_0);
    shl_ln1118_112_fu_794_p1 <= call_ret_relu_fu_200_ap_return_4;
    shl_ln1118_112_fu_794_p3 <= (shl_ln1118_112_fu_794_p1 & ap_const_lv3_0);
    shl_ln1118_113_fu_812_p1 <= call_ret_relu_fu_200_ap_return_4;
    shl_ln1118_113_fu_812_p3 <= (shl_ln1118_113_fu_812_p1 & ap_const_lv1_0);
    shl_ln1118_s_fu_444_p1 <= call_ret_relu_fu_200_ap_return_4;
    shl_ln1118_s_fu_444_p3 <= (shl_ln1118_s_fu_444_p1 & ap_const_lv2_0);
    shl_ln_fu_426_p1 <= call_ret_relu_fu_200_ap_return_4;
    shl_ln_fu_426_p3 <= (shl_ln_fu_426_p1 & ap_const_lv4_0);
    sub_ln1118_103_fu_394_p2 <= std_logic_vector(signed(sext_ln1118_231_fu_378_p1) - signed(sext_ln1118_232_fu_390_p1));
    sub_ln1118_104_fu_456_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_438_p2) - unsigned(sext_ln1118_237_fu_452_p1));
    sub_ln1118_105_fu_513_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln1118_242_fu_509_p1));
    sub_ln1118_106_fu_519_p2 <= std_logic_vector(unsigned(sub_ln1118_105_fu_513_p2) - unsigned(sext_ln1118_241_fu_497_p1));
    sub_ln1118_107_fu_917_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(sext_ln1118_245_fu_913_p1));
    sub_ln1118_108_fu_923_p2 <= std_logic_vector(unsigned(sub_ln1118_107_fu_917_p2) - unsigned(sext_ln1118_244_fu_903_p1));
    sub_ln1118_109_fu_591_p2 <= std_logic_vector(signed(sext_ln1118_247_fu_587_p1) - signed(sext_ln1118_246_fu_575_p1));
    sub_ln1118_110_fu_685_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln1118_249_fu_681_p1));
    sub_ln1118_111_fu_691_p2 <= std_logic_vector(unsigned(sub_ln1118_110_fu_685_p2) - unsigned(sext_ln1118_240_fu_493_p1));
    sub_ln1118_112_fu_769_p2 <= std_logic_vector(signed(sext_ln1118_230_fu_374_p1) - signed(sext_ln1118_250_fu_765_p1));
    sub_ln1118_113_fu_806_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(sext_ln1118_251_fu_802_p1));
    sub_ln1118_114_fu_824_p2 <= std_logic_vector(unsigned(sub_ln1118_113_fu_806_p2) - unsigned(sext_ln1118_252_fu_820_p1));
    sub_ln1118_fu_438_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln1118_236_fu_434_p1));
    tmp_47_fu_400_p4 <= sub_ln1118_103_fu_394_p2(18 downto 7);
    tmp_48_fu_462_p4 <= sub_ln1118_104_fu_456_p2(18 downto 7);
    tmp_49_fu_649_p4 <= mul_ln1118_131_fu_643_p2(18 downto 7);
    tmp_50_fu_697_p4 <= sub_ln1118_111_fu_691_p2(16 downto 7);
    tmp_fu_382_p1 <= call_ret_relu_fu_200_ap_return_2;
    tmp_fu_382_p3 <= (tmp_fu_382_p1 & ap_const_lv4_0);
    tmp_s_fu_757_p1 <= call_ret_relu_fu_200_ap_return_2;
    tmp_s_fu_757_p3 <= (tmp_s_fu_757_p1 & ap_const_lv3_0);
    trunc_ln708_197_fu_480_p4 <= mul_ln1118_128_fu_1060_p2(20 downto 7);
    trunc_ln708_198_fu_525_p4 <= sub_ln1118_106_fu_519_p2(18 downto 7);
    trunc_ln708_199_fu_929_p4 <= sub_ln1118_108_fu_923_p2(19 downto 7);
    trunc_ln708_200_fu_597_p4 <= sub_ln1118_109_fu_591_p2(19 downto 7);
    trunc_ln708_201_fu_611_p1 <= call_ret_relu_fu_200_ap_return_1;
    trunc_ln708_201_fu_611_p4 <= trunc_ln708_201_fu_611_p1(13 downto 6);
    trunc_ln708_202_fu_625_p4 <= mul_ln1118_129_fu_1067_p2(20 downto 7);
    trunc_ln708_203_fu_634_p4 <= mul_ln1118_130_fu_1074_p2(20 downto 7);
    trunc_ln708_204_fu_663_p1 <= call_ret_relu_fu_200_ap_return_5;
    trunc_ln708_205_fu_962_p4 <= mul_ln1118_132_fu_1116_p2(20 downto 7);
    trunc_ln708_206_fu_735_p4 <= mul_ln1118_133_fu_1081_p2(19 downto 7);
    trunc_ln708_207_fu_748_p4 <= mul_ln1118_134_fu_1088_p2(20 downto 7);
    trunc_ln708_210_fu_830_p4 <= sub_ln1118_114_fu_824_p2(17 downto 7);
    trunc_ln708_211_fu_844_p4 <= mul_ln1118_136_fu_1102_p2(20 downto 7);
    trunc_ln708_212_fu_853_p4 <= mul_ln1118_137_fu_1109_p2(20 downto 7);
    trunc_ln708_213_fu_862_p1 <= call_ret_relu_fu_200_ap_return_7;
    trunc_ln708_213_fu_862_p4 <= trunc_ln708_213_fu_862_p1(13 downto 1);
    trunc_ln708_s_fu_361_p4 <= mul_ln1118_127_fu_1053_p2(20 downto 7);
    trunc_ln_fu_348_p4 <= mul_ln1118_fu_1046_p2(20 downto 7);
end behav;
